<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
      xmlns:p="http://primefaces.org/ui">

<h:head>

</h:head>
<h:body>

    <p:importEnum type="br.com.maratona.enums.Turno"
                  var="Turno" allSuffix="ALL_ENUM_VALUES"/>

    <h:outputLabel value="Helo, world"/><br/>
    <h:outputLabel value="#{estudanteRegistrarBean.estudante.nome}"/><br/>
    <h:outputLabel value="#{estudanteRegistrarBean.estudante['sobrenome']}"/><br/>
    <h:outputLabel value="#{estudanteRegistrarBean.estudante.nota1 eq estudanteRegistrarBean.estudante.nota2}"/><br/>
    <h:outputLabel value="#{estudanteRegistrarBean.estudante.nota1 == estudanteRegistrarBean.estudante.nota2}"/><br/>
    <h:outputLabel value="#{estudanteRegistrarBean.estudante.nota1 eq estudanteRegistrarBean.estudante.nota2 and
    estudanteRegistrarBean.estudante.nome.equals('William')}"/><br/>
    <h:outputText value="Comparacao notas"/><br/>
    <h:outputLabel value="#{estudanteRegistrarBean.estudante.nota1 le estudanteRegistrarBean.estudante.nota2}"/><br/>
    <h:outputLabel value="#{estudanteRegistrarBean.estudante.nota1 eq 0 ? 'ZERO' : 'NAO ZERO' }"/><br/>
    <h:outputLabel value="#{estudanteRegistrarBean.estudante.nota1 = 40}"/><br/>
    <h:outputLabel value="#{estudanteRegistrarBean.estudante.nota1}"/><br/>
    <h:outputLabel value="#{estudanteRegistrarBean.estudante.nome += ' sobrenonealgumacoisa'}"/><br/>
    <h:outputLabel value="#{estudanteRegistrarBean.estudante.nome}"/><br/>
    <!--Palavras reservadas: and, or, not , eq, ne, lt, gt, le, ge, true, false
    null, instanceof, empty, div e mod
    -->
    <h:outputText value="Comparacao de Enums"/><br/>
    <h:outputLabel value="#{estudanteRegistrarBean.estudante.turno eq Turno.MANHA }"/><br/>
    <!--exibindo array de nomes-->
    <h:outputText value="Exibindo Array"/><br/>
    <h:outputLabel value="#{estudanteRegistrarBean.nomesArray[0] }
#{estudanteRegistrarBean.nomesArray[1] }
#{estudanteRegistrarBean.nomesArray[2] }"/><br/>
    <!--iterando numa lista de Array-->
    <h:outputText value="interando no Arrai"/><br/>

    <ui:repeat value="#{estudanteRegistrarBean.nomesArray}" var="nome">

        <h:outputLabel value="#{nome}"/><br/>

    </ui:repeat>

    <!--iterando numa lista-->
    <h:outputText value="interando no Arrai"/><br/>

    <ui:repeat value="#{estudanteRegistrarBean.nomesList}" var="nome">

        <h:outputLabel value="#{nome}"/><br/>

    </ui:repeat>

    <!--iterando numa lista de SET-->
    <h:outputText value="interando na Lista SET"/><br/>

    <ui:repeat value="#{estudanteRegistrarBean.nomesSet.toArray()}" var="nome">

        <h:outputLabel value="#{nome}"/><br/>

    </ui:repeat>


    <!--iterando numa lista de MAP-->
    <h:outputText value="interando na Lista MAP"/><br/>
    <h:outputText value="#{estudanteRegistrarBean.nomesMap.get('Goku')}"/><br/>
    <h:outputText value="#{estudanteRegistrarBean.nomesMap}"/><br/>


    <!--iterando chave - valor lista de MAP-->
    <ui:repeat value="#{estudanteRegistrarBean.nomesMap.entrySet().toArray()}" var="entry">

        <h:outputLabel value="#{entry.key} - #{entry.value}"/><br/>

    </ui:repeat>

    <!--chamando um método-->

    <h:outputText value="#{estudanteRegistrarBean.executar()}"/><br/>

    <!--chamando um método passando parametro-->
    <h:outputText value="#{estudanteRegistrarBean.executarcomParametro('Xuxu')}"/><br/>

    <!--chamando um método passando parametro com retorno-->
    <h:outputText value="chamando um método passando parametro com retorno"/><br/>
    <h:outputText value="#{estudanteRegistrarBean.executarcomRetorno('Leandro')}"/><br/>

    <!--actionListener utilizado quando o mátodo não tem retorno(void)-->

    <h:commandButton value="Sem retorno" actionListener="#{estudanteRegistrarBean.executar()}"/>

    <h:form>
        <!--action utilizado quando o mátodo tem retorno -->

        <h:commandButton value="Ir para a Próxima Página"
                         action="#{estudanteRegistrarBean.irParaproximaPagina()}"/><br/>

        <!--chamando uma função JS-->
        <h:outputText value="chamando uma função JS"/><br/>
        <h:commandButton value="Soltar Magia" onclick="fazMagica('haduken')"/><br/>
        <h:commandButton value="Alerta Nome" onclick="aletNome('#{estudanteRegistrarBean.estudante.nome}')"/><br/>

    </h:form>

    <!--imprimindo css com el utilzando uma variável auxiliar varStatus-->

    <h:outputText value="interando no Arrai"/><br/>

    <ui:repeat value="#{estudanteRegistrarBean.nomesArray}" var="nome" varStatus="status">

        <!--utilizando o index para saber a ordem : representa se não-->
        <!--#{status.index mod 2 == 0 ? 'red' : 'green'} onde mod representa resto para saber se é par ou impar-->

        <h:outputLabel value="#{nome}" style="color:  #{status.index mod 2 == 0 ? 'red' : 'green'} "/><br/>

    </ui:repeat>

    <!--trabalhando com rendered e condições-->
    <h:form id="form">

        <!--para que a página não seja toda renderizada novamente utiliza uma requisição ajax e o metodo é chamado por ele-->
        <h:commandButton value="Mostar notas">
            <f:ajax render="estudanteGrid" listener="#{estudanteRegistrarBean.mostrarNotas()}"/>
        </h:commandButton><br/>

        <h:commandButton value="esconder notas">
            <f:ajax render="estudanteGrid" listener="#{estudanteRegistrarBean.OcultarNotas()}"/>
        </h:commandButton><br/>

        <!--encapsulando dentro de um painelgrid para que o ajax possa atualizar-->
        <h:panelGrid id="estudanteGrid">
            <h:outputLabel value="Nome"/>
            <h:outputLabel value="#{estudanteRegistrarBean.estudante.nome}"/>
            <h:outputLabel value="Sobrenome"/>
            <h:outputLabel value="#{estudanteRegistrarBean.estudante.sobrenome}"/>
            <h:outputLabel value="Turno"/>
            <h:outputLabel value="#{estudanteRegistrarBean.estudante.turno}"/>
            <h:outputLabel value="Nota 1"/>
            <h:outputLabel value="#{estudanteRegistrarBean.estudante.nota1}"
                           rendered="#{estudanteRegistrarBean.mostrarNotas}"/>
            <h:outputLabel value="Nota 2"/>
            <h:outputLabel value="#{estudanteRegistrarBean.estudante.nota2}"
                           rendered="#{estudanteRegistrarBean.mostrarNotas}"/>
            <h:outputLabel value="Nota 3"/>
            <h:outputLabel value="#{estudanteRegistrarBean.estudante.nota3}"
                           rendered="#{estudanteRegistrarBean.mostrarNotas}"/>
        </h:panelGrid>
    </h:form>

    <!-- pasando um Lambida para o back bean-->
    <h:form>

        <h:commandButton value="Calcular Cubo" actionListener="#{estudanteRegistrarBean.calcularCubo((x->x*x*x),10)}"/><br/>

    </h:form>

    <!--criando listas no EL-->

    <ui:repeat value="#{['deve','dojo','eh','foda']}" var="fodeza"><br/>

        #{fodeza}

    </ui:repeat>


    <!--criando SET no EL SET não aceita elementos duplicados e não mantem a ordem-->

    <ui:repeat value="#{{'deve','dojo','eh','foda','foda'}}" var="fodeza"><br/>

        #{fodeza}

    </ui:repeat>

    <!--criando MAP no EL -->

    <ui:repeat value="#{{'melhor lugar':'dojo','maratona':'java'}}" var="fodeza"><br/>

        <ui:repeat value="#{fodeza.entrySet().toArray()}" var="entry">

            #{entry.key} - #{entry.value}

        </ui:repeat>

    </ui:repeat>


</h:body>

<script type="text/javascript">

    function fazMagica(magica) {
        alert(magica)

    }

    function aletNome(nome) {
        alert(nome)

    }


</script>

</html>
